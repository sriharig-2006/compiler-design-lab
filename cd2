%{
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

char *reservedWords[] = {
    "int", "float", "char", "return", "if", "else", "while", "for", "void", "double"
};

int checkKeyword(char *token) {
    int totalKeywords = sizeof(reservedWords) / sizeof(reservedWords[0]);
    for (int idx = 0; idx < totalKeywords; idx++) {
        if (strcmp(token, reservedWords[idx]) == 0)
            return 1;
    }
    return 0;
}
%}

%%
// Keywords & Identifiers
[a-zA-Z_][a-zA-Z0-9_]* {
    if (checkKeyword(yytext))
        printf("Keyword: %s\n", yytext);
    else
        printf("Identifier: %s\n", yytext);
}

// Numbers (integer & floating)
[0-9]+(\.[0-9]+)?     { printf("Constant (Number): %s\n", yytext); }

// String literal
\"([^\\\"]|\\.)*\"     { printf("Literal (String): %s\n", yytext); }

// Char literal
\'([^\\\']|\\.)\'      { printf("Literal (Char): %s\n", yytext); }

// Operators
"=="|"!="|"<="|">="|"<"|">"|"="|"++"|"--"|"+"|"-"|"*"|"/"|"%"  { printf("Operator: %s\n", yytext); }

// Special symbols
[;,\{\}\(\)\[\]]       { printf("Special Symbol: %s\n", yytext); }

// Ignore whitespace
[ \t\n]+               ;

// Unknown tokens
.                      { printf("Unknown Token: %s\n", yytext); }
%%

int yywrap() { return 1; }

int main() {
    printf("Lexical Analysis Started...\n\n");
    yylex();
    return 0;
}
