%{
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdbool.h>

#define MAX 100
char *symbol_table[MAX];
int symbol_count = 0;

void add_symbol(const char *name) {
    for (int i = 0; i < symbol_count; i++) {
        if (strcmp(symbol_table[i], name) == 0) return; // already present
    }
    symbol_table[symbol_count++] = strdup(name);
}
%}

IDENTIFIER [a-zA-Z_][a-zA-Z0-9_]*
NUMBER     [0-9]+
OPERATOR   [+\-*/=<>!]+
COMMENT1   "//".*
COMMENT2   "/*"([^*]|\*+[^*/])*\*+"/"

%%

{IDENTIFIER}  { printf("Identifier: %s\n", yytext); add_symbol(yytext); }
{NUMBER}      { printf("Constant: %s\n", yytext); }
{OPERATOR}    { printf("Operator: %s\n", yytext); }
{COMMENT1}    { printf("Single-line Comment: %s\n", yytext); }
{COMMENT2}    { printf("Multi-line Comment: %s\n", yytext); }
[ \t\n]+      ;  // Ignore whitespace
.             { printf("Unknown token: %s\n", yytext); }

%%

int main() {
    printf("Enter code (Ctrl+D to stop):\n");
    yylex();
    printf("\n--- Symbol Table ---\n");
    for (int i = 0; i < symbol_count; i++)
        printf("%d: %s\n", i + 1, symbol_table[i]);
    return 0;
}

int yywrap() { return 1; }
